package com.udea.parcial.dto;

import io.swagger.v3.oas.annotations.media.Schema;
import jakarta.validation.constraints.Email;
import jakarta.validation.constraints.NotBlank;
import jakarta.validation.constraints.Pattern;
import jakarta.validation.constraints.Size;
import lombok.*;

@Getter
@Setter
@AllArgsConstructor
@NoArgsConstructor
public class PatientDTO {
    @Schema(description = "Autogenerated by the DB")
    private long patientId;

    @Schema(description = "Full name of the patient")
    @NotBlank(message = "Name is required")
    @Size(min = 1, max = 100)
    private String name;

    @Schema(description = "Identification number of the patient")
    @NotBlank(message = "Identification Number is required")
    @Pattern(regexp = "^[0-9]{10}", message = "Identification Number must be 10 digits")
    @Size(min = 10, max = 10)
    private String identificationNumber;

    @Schema(description = "Date of birth of the patient")
    @NotBlank(message = "Date of birth is required")
    @Size(min = 10, max = 10)
    private String dateOfBirth;

    @Schema(description = "Address of the patient")
    @NotBlank(message = "Address is required")
    @Size(min = 1, max = 200)
    private String address;

    @Schema(description = "Phone number of the patient")
    @NotBlank(message = "Phone number is required")
    @Pattern(regexp = "^[0-9]{10}", message = "Phone number must be 10 digits")
    @Size(min = 10, max = 10)
    private String phone;

    @Schema(description = "Email of the patient")
    @NotBlank(message = "Email is required")
    @Email(message = "Email should be valid")
    @Size(min = 5, max = 100)
    private String email;
}
